# Django Translator 앱 튜토리얼 정리

## 📝 문제 해결 과정

### 🗂 To-Do List 문제 해결

### 🌍 Translator 앱 문제 해결

| 단계 | 문제 발생 이유 | 해결 방법 |
|------|----------------|------------|
| **1. TemplateDoesNotExist 오류** | `main/index.html` 템플릿 파일이 Django가 찾을 수 있는 위치에 없거나, 경로 설정이 잘못됨. | 1. `main/templates/main/index.html` 파일이 있는지 확인.<br>2. `settings.py`에서 `TEMPLATES` 설정 점검 (`APP_DIRS: True` 확인).<br>3. 뷰에서 올바른 템플릿 경로(`main/index.html`)를 렌더링하도록 확인. |
| **2. 번역 기능이 작동하지 않음** | `Translator` 라이브러리가 제대로 설치되지 않았거나, 언어 선택이 올바르게 처리되지 않음. | 1. `pip install translate`로 라이브러리 설치.<br>2. 지원 언어 목록을 확인 (`hindi`, `marathi`, `german`, `spanish`, `french`, `korean`, `japanese`).<br>3. 선택한 언어가 목록에 포함되어 있는지 검사. |
| **3. POST 요청이 처리되지 않음** | CSRF 토큰이 누락되었거나, `form` 데이터가 올바르게 전달되지 않음. | 1. `form` 내부에 `{% csrf_token %}` 추가.<br>2. `input`과 `select` 태그에 `name` 속성이 올바르게 설정되었는지 확인.<br>3. `request.POST["translate"]`와 `request.POST["language"]`가 존재하는지 디버깅. |
| **4. 최종 확인** | 위 단계를 수행하지 않아 번역 기능이 정상 작동하지 않음. | 1. 모든 수정 후 서버 재시작(`python manage.py runserver`).<br>2. `http://127.0.0.1:8000/` 접속으로 작동 확인. |

---

## 💡 느낀 점

- **버전 호환 문제**는 역시 `venv` 가상환경에서 진행하는 게 속편하다…!
- **경로**는 한글이 없는 곳에서 진행할 것….!
- `Translator` 라이브러리는 지원 언어를 잘 확인해야 한다.

---

## 🔗 참고 자료
- [GeeksforGeeks - Django Translator App](https://www.geeksforgeeks.org/translator-app-project-using-django/)

---
#index.html
<!DOCTYPE html> 
<html> 
<head> 
	<title>GFG</title> 
</head> 
<body> 
<form method="post"> 
	{% csrf_token %} 
	<input type="text" name="translate" required> 
	<br> 
	<select required name="language"> 
		<option value="Hindi">Hindi</option> 
		<option value="Marathi">Marathi</option> 
		<option value="German">German</option> 
	</select> 
	<br> 
	<button type="submit">Translate</button> 
</form> 
</body> 
</html> 

---

---

#view.py
from django.shortcuts import render,HttpResponse 
from translate import Translator 
# Create your views here. 

def home(request): 
	if request.method == "POST": 
		text = request.POST["translate"] 
		language = request.POST["language"] 
		translator= Translator(to_lang=language) 
		translation = translator.translate(text) 
		return HttpResponse(translation) 
	return render(request,"main/index.html")

---

---

"""
Django settings for translator project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8jkfl^*ji(=#zttu609brb)5%#c^uy7s(qus38yf0gv+v!nt1-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'main',  # 쉼표 추가됨
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'translator',  # translator 앱이 존재한다면 포함
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'translator.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # 템플릿 경로 추가
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'translator.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

---

---

#urls.py
from django.contrib import admin
from django.urls import path
from main import views  # main 앱에서 views를 가져옵니다.

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', views.home, name='home'),  # 루트 URL ('/')을 home 뷰와 연결
]

---
